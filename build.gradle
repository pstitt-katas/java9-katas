buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        lombokVersion = '1.18.4'
        junitPlatformVersion = '1.3.2'
        junitJupiterVersion = '5.3.2'
        jacksonVersion = '2.9.8'
    }
    repositories {
        maven {
            url "https://artifactory.server.traveljigsaw.com/artifactory/repo"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'nebula.lint' version '10.4.0'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id "com.github.ben-manes.versions" version "0.20.0"
}

repositories {
    maven {
        url "https://artifactory.server.traveljigsaw.com/artifactory/repo"
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'stittp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

lombok {
    version = "${lombokVersion}"
    sha256 = "c5178b18caaa1a15e17b99ba5e4023d2de2ebc18b58cde0f5a04ca4b31c10e6d"
}

springBoot {
    buildInfo()
}

gradleLint {
    criticalRules = [
            'archaic-wrapper',
            'minimum-dependency-version',
            'overridden-dependency-version',
            'all-nebula-renames',
            'duplicate-dependency-class'
    ]
    autoLintAfterFailure = false
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
    }
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation 'com.github.jknack:handlebars:4.1.2'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.googlecode.htmlcompressor:htmlcompressor:1.5.2'
    runtime 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.projectreactor:reactor-core:3.2.3.RELEASE'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.ahocorasick:ahocorasick:0.4.0'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.apache.commons:commons-text:1.6'
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.1.0.RC3'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard:2.1.0.RC3'
}

// test dependencies
dependencies {
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testRuntime "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"

    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.20.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation 'org.mockito:mockito-core:2.23.4'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:2.1.0.RC3'
}

test {
    useJUnitPlatform()
}
